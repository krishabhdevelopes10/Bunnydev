import requests
import speech_recognition as sr
import pyautogui
import webbrowser
import os
from deep_translator import GoogleTranslator
from gtts import gTTS
from playsound import playsound
import tempfile
import re
DEEPSEEK_API_KEY = "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"
def clean_markdown(text):
    text = re.sub(r'\*\*|#+|```|[-‚Ä¢]', '', text)
    text = re.sub(r'\n+', '. ', text)
    text = re.sub(r'\s{2,}', ' ', text)
    return text.strip()
def speak(text, lang='en'):
    try:
        if lang != 'en':
            text = GoogleTranslator(source='auto', target=lang).translate(text)
    except Exception as e:
        print("Translation failed:", e)

    print("üó£Ô∏è Raghu says:", text)

    try:
        temp_path = os.path.join(tempfile.gettempdir(), "raghu_output.mp3")
        tts = gTTS(text=text, lang=lang)
        tts.save(temp_path)
        playsound(temp_path)
        os.remove(temp_path)
        print("‚úÖ Speaking done.\n")
    except Exception as e:
        print("gTTS failed:", e)
        print("‚ö†Ô∏è Couldn't speak the text aloud.")
def listen():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("üé§ Listening...")
        audio = r.listen(source)
    try:
        query = r.recognize_google(audio)
        print("üßë You said:", query)
        speak("Yes Abhinav, my lord")
        return query.lower()
    except Exception as e:
        print("‚ùå Recognition failed:", e)
        speak("Sorry, I didn‚Äôt catch that.")
        return ""

def ask_deepseek(prompt, lang='en'):
    url = "https://openrouter.ai/api/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {DEEPSEEK_API_KEY}",
        "HTTP-Referer": "https://chat.openrouter.ai",
        "X-Title": "raghu-desktop-assistant",
        "Content-Type": "application/json"
    }
    data = {
        "model": "deepseek/deepseek-chat-v3-0324",
        "messages": [{"role": "user", "content": prompt}],
        "temperature": 0.7
    }

    try:
        speak("Let me think...", lang)
        response = requests.post(url, headers=headers, json=data)
        if response.status_code != 200:
            print("‚ùå DeepSeek error:", response.status_code)
            print("Details:", response.text)
            speak("Failed to connect to DeepSeek.")
            return

        reply = response.json()["choices"][0]["message"]["content"]
        cleaned = clean_markdown(reply)

        print("üß† DeepSeek raw reply:\n", reply)
        print("üßπ Cleaned reply:\n", cleaned)

        speak(cleaned, lang=lang)
    except Exception as e:
        print("‚ùå Error talking to DeepSeek:", e)
        speak("An error occurred while talking to DeepSeek.")
recycle_bin_opened = False

def control_pc(command):
    global recycle_bin_opened

    if "open notepad" in command:
        os.system("notepad")
    elif "open chrome" in command:
        webbrowser.open("https://www.google.com")
    elif "shutdown" in command:
        os.system("shutdown /s /t 1")
    elif "restart" in command:
        speak("Restarting your system.")
        os.system("shutdown /r /t 1")
    elif "screenshot" in command:
        pyautogui.screenshot("screenshot.png")
        speak("Screenshot taken.")
    elif "open recycle bin" in command:
        try:
            os.startfile("shell:RecycleBinFolder")
            recycle_bin_opened = True
            speak("Recycle Bin is now open.")
        except Exception as e:
            print("‚ùå Error opening Recycle Bin:", e)
            speak("I couldn't open the Recycle Bin.")
    elif "delete everything" in command:
        if recycle_bin_opened:
            try:
                import ctypes
                SHERB_NOCONFIRMATION = 0x00000001
                SHERB_NOPROGRESSUI = 0x00000002
                SHERB_NOSOUND = 0x00000004
                ctypes.windll.shell32.SHEmptyRecycleBinW(None, None, SHERB_NOCONFIRMATION | SHERB_NOSOUND | SHERB_NOPROGRESSUI)
                speak("Everything in the Recycle Bin has been deleted.")
                recycle_bin_opened = False
            except Exception as e:
                print("‚ùå Error emptying Recycle Bin:", e)
                speak("Failed to empty the Recycle Bin.")
        else:
            speak("Recycle Bin is not open. Please open it first.")

    elif "play my favorite song" in command or "play my favourite song" in command:
        try:
            print("üéµ Playing your favorite song now...")
            speak("Yes sir, your fav song")
            url = "https://youtu.be/0KozfDYK1EU?si=rrFWJw2LU1KgjghB"
            webbrowser.open_new_tab(url)
        except Exception as e:
            print("‚ùå Error playing song:", e)
            speak("I couldn't play the song.")

    else:
        return False
    return True
def detect_language(command):
    if "in hindi" in command:
        return "hi"
    elif "in chinese" in command:
        return "zh-CN"
    elif "in russian" in command:
        return "ru"
    elif "in japanese" in command:
        return "ja"
    elif "in spanish" in command:
        return "es"
    return "en"
def main():
    speak("Hello! I am Raghu, your assistant.")
    while True:
        command = listen()
        if not command:
            continue

        print("üéß Command received:", command)

        if "exit" in command or "stop" in command:
            speak("Goodbye! Have a nice day.")
            break

        lang = detect_language(command)
        print("üåê Language detected:", lang)

        if not control_pc(command):
            print("‚û°Ô∏è Sending to DeepSeek...")
            ask_deepseek(command, lang)
if __name__ == "__main__":
    main()
